[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vehicle Accident Report",
  "enabled": 1,
  "modified": "2021-08-20 15:25:11.424538",
  "name": "Vehicle Accident Report-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Vehicle Accident Report', {\n\trefresh(frm) {\n            \n\t},\n\tdate(frm){\n\t    frm.set_value('designation',frm.doc.dept)\n\t    \n\t},\n\tname1(frm){\n\t    var regex = /[^A-Za-z\\s]/g;\n\t\tif (regex.test(frm.doc.name1) === true) {\n\t\t\tfrappe.msgprint(__(\"Only Alphabets are allowed.\"));\n\t\t\tfrappe.validated = false;\n\t\t}\n\t},\n\tto(frm){\n\t    if(frm.doc.to > frappe.datetime.now_date()){\n\t        frappe.msgprint(__(\"Future date is not allowed.\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2022-01-18 13:57:07.720211",
  "name": "Employee-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Employee', {\n    validate(frm){\n        frm.trigger(\"age_calculation\")\n        if(!frm.doc.__islocal){\n        frappe.call({\n    \t\tmethod: \"electra.custom.gratuity_calc\",\n    \t\targs: {\n    \t\t\temployee: frm.doc.employee_number,\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t //   console.log(r)\n    \t\t\t    frm.set_value('gratuity',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n        }\n        var gross_salary = frm.doc.basic + frm.doc.hra + frm.doc._other_allowance;\n        var ctc = gross_salary + frm.doc.gratuity + frm.doc.leave_salary + frm.doc.air_ticket_allowance + frm.doc.qid_cost + frm.doc.mobile_allowance + frm.doc.medical_renewal + frm.doc.accommodation + frm.doc.transportation\n        var per_hour_cost = ( ctc / (30*8) )\n        frm.set_value(\"gross_salary\",gross_salary)\n        frm.set_value(\"ctc\",ctc)\n        frm.set_value(\"per_hour_cost\",per_hour_cost)\n        \n        \n    },\n    work_location(frm){\n        frappe.call({\n    \t\tmethod: \"frappe.client.get\",\n    \t\targs: {\n    \t\t\tdoctype: \"Work Location\",\n    \t\t\tfilters: {\n    \t\t\t\t\"work_location\": frm.doc.work_location\n    \t\t\t},\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('holiday_list',r.message.holiday_list)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n    },\n\tdate_of_birth:function(frm){\n    \t frm.trigger(\"age_calculation\")\n\t},\n\tage_calculation:function(frm){\n\t    var dob = frm.doc.date_of_birth;  \n    \t var birthDate = new Date(dob);\n    \t var difference=Date.now() - birthDate.getTime(); \n    \t var  ageDate = new Date(difference); \n    \t var calculatedAge = Math.abs(ageDate.getUTCFullYear() - 1970);\n    \t frm.set_value(\"age\",calculatedAge)\n    \t if (calculatedAge < 18){\n    \t     frappe.msgprint(\"Employee lesser than age 18 will not be allowed\")\n    \t     frappe.validated = false;\n    \t }\n    \t \n},\n\ngrade(frm){\n    frappe.call({\n    \t\tmethod: \"frappe.client.get\",\n    \t\targs: {\n    \t\t\tdoctype: \"Employee Grade\",\n    \t\t\tfilters: {\n    \t\t\t\tname: frm.doc.grade,\n    \t\t\t},\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('visa_cost_',r.message.visa_cost)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n},\n\nrevised(frm){\n    frm.add_child(\"salary_revised\", {\n        'basic': frm.doc.basic,\n\t\t'hra':frm.doc.hra,\n\t\t'other_allowance':frm.doc._other_allowance,\n\t\t'gross_salary':frm.doc.gross_salary,\n\t\t'gratuity':frm.doc.gratuity,\n\t\t'leave_salary':frm.doc.leave_salary,\n\t\t'air_ticket_allowance':frm.doc.air_ticket_allowance_,\n\t\t'qid_cost':frm.doc.qid_cost,\n\t\t'mobile_allowance':frm.doc.mobile_allowance,\n\t\t'medical_allowance':frm.doc.medical_allowance_,\n\t\t'accommodation':frm.doc.accommodation,\n\t\t'transportation':frm.doc.transportation,\n\t\t'ctc':frm.doc.ctc,\n\t\t'per_hour_cost':frm.doc.per_hour_cost,\n\t\t'salary__mode':frm.doc.salary_mode,\n\t\t'bank_name':frm.doc.bank_name,\n\t\t'account_name':frm.doc.account_name,\n\t\t'bank_ac_no':frm.doc.bank_ac_no,\n\t\t'iban_pay_card_no':frm.doc.iban_pay_card_no,\n\t\t'payroll_cost_center':frm.doc.payroll_cost_center,\n\t\t'visa_cost':frm.doc.visa_cost_\n\t\t})\n\t\t\n\t\tfrm.refresh_field('salary_revised')\n\t\tfrm.set_value('basic','')\n\t\tfrm.set_value('hra','')\n\t\tfrm.set_value('_other_allowance','')\n\t\tfrm.set_value('gross_salary','')\n\t\tfrm.set_value('gratuity','')\n\t\tfrm.set_value('leave_salary','')\n\t\tfrm.set_value('air_ticket_allowance_','')\n\t\tfrm.set_value('qid_cost','')\n\t\tfrm.set_value('mobile_allowance','')\n\t\tfrm.set_value('medical_allowance_','')\n\t\tfrm.set_value('accommodation','')\n\t\tfrm.set_value('transportation','')\n\t\tfrm.set_value('ctc','')\n\t\tfrm.set_value('per_hour_cost','')\n\t\tfrm.set_value('salary_mode','')\n\t\tfrm.set_value('bank_name','')\n\t\tfrm.set_value('account_name','')\n\t\tfrm.set_value('bank_ac_no','')\n\t\tfrm.set_value('iban_pay_card_no','')\n\t\tfrm.set_value('payroll_cost_center','')\n\t\tfrm.set_value('visa_cost_','')\n\t\t\n\t\t\n}\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Interim Appraisal Form",
  "enabled": 1,
  "modified": "2021-08-18 13:46:11.789025",
  "name": "Interim Appraisal Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Interim Appraisal Form', {\n// \trefresh(frm) {\n\t\t\n// \t}\nemp_id(frm){\n    console.log(\"hiiiii\")\n}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staff Skill Mapping Form",
  "enabled": 1,
  "modified": "2021-08-24 14:39:54.922344",
  "name": "Staff Skill Mapping Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Staff Skill Mapping Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\t emp_id(frm){\n        console.log(frm.doc.emp_id);\n    \n    },\n    validate(frm){\n        var total = 0\n        $.each(frm.doc.table_14,function(i,d){\n            if(d.rating){\n            total += d.rating\n            }\n        })\n        console.log(total)\n        frm.set_value('total_score',total)\n    }\n});\t\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vehicle Maintenance Check List",
  "enabled": 1,
  "modified": "2021-08-23 08:19:10.037758",
  "name": "VEHICLE MAINTENANCE CHECK LIST-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('VEHICLE MAINTENANCE CHECK LIST', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n// \tcompany: function(frm) {\n// \t\tfrappe.call({\n// \t\t\tmethod: \"frappe.client.get_value\",\n// \t\t\targs: {\n// \t\t\t\tdoctype: \"Company\",\n// \t\t\t\tfilters: {\"name\": frm.doc.company},\n// \t\t\t\tfieldname: \"cost_center\"\n// \t\t\t},\n// \t\t\tcallback: function(r){\n// \t\t\t\tif(r.message){\n// \t\t\t\t\t$.each(frm.doc.accounts || [], function(i, jvd) {\n// \t\t\t\t\t\tfrappe.model.set_value(jvd.doctype, jvd.name, \"cost_center\", r.message.cost_center);\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t});\n\n// \t\terpnext.accounts.dimensions.update_dimension(frm, frm.doctype);\n// \t},\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vehicle Possession and Surrender Form",
  "enabled": 1,
  "modified": "2021-08-28 13:07:42.741526",
  "name": "Vehicle Possession and Surrender Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Vehicle Possession and Surrender Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tpossession_date(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tsurrender_date(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tfuture_date_validate:function(frm){\n\t\tvar today = new Date()\n\t\tconsole.log(today)\n\t\ttoday.setDate(today.getDate());\n\t\tvar dd = today.getDate();\n        var mm = today.getMonth() + 1; \n        var yyyy = today.getFullYear();\n        if(dd<10) \n            {\n                dd='0'+dd;\n            } \n            \n        if(mm<10) \n            {\n                mm='0'+mm;\n            } \n        today = yyyy+'-'+mm+'-'+dd;\n\t\tconsole.log(frm.doc.possession_date)\n\t\tif (frm.doc.possession_date > today){\n\t\t    frappe.msgprint(\"Future Date not Allowed in Date of Possession\")\n\t\t    frappe.validated = false;\n\t\t}\n\t\tif (frm.doc.surrender_date > today){\n\t\t    frappe.msgprint(\"Future Date not Allowed in Date of Surrender\")\n\t\t    frappe.validated = false;\n\t\t}\n\t}\n\t\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vehicle Log",
  "enabled": 1,
  "modified": "2021-08-28 09:05:50.805406",
  "name": "Vehicle Log-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Vehicle Log', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\taccident_date(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tfuture_date_validate:function(frm){\n\t\tvar today = new Date()\n\t\tconsole.log(today)\n\t\ttoday.setDate(today.getDate());\n\t\tvar dd = today.getDate();\n        var mm = today.getMonth() + 1; \n        var yyyy = today.getFullYear();\n        if(dd<10) \n            {\n                dd='0'+dd;\n            } \n            \n        if(mm<10) \n            {\n                mm='0'+mm;\n            } \n        today = yyyy+'-'+mm+'-'+dd;\n\t\tconsole.log(typeof today)\n\t\tconsole.log(frm.doc.accident_date)\n\t\tif (frm.doc.accident_date > today){\n\t\t    frappe.msgprint(\"Future Date not Allowed in Date of Accident\")\n\t\t    frappe.validated = false;\n\t\t}\n\t}\n\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Re Joining From Leave",
  "enabled": 1,
  "modified": "2021-10-04 16:56:51.572567",
  "name": "Employee Re Joining Report-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Re Joining From Leave', {\n\trefresh(frm) {\n\t    \n\t},\n\t\n\temp_no(frm){\n        console.log(frm.doc.emp_no);\n\t},\n\t\n\t\tend(frm){ \n\t\t    frm.trigger(\"total_leave_in_days\")\n\t},\n\t  \n\t   start(frm){\n\t      frm.trigger(\"date_validation\")\n\t      \n\t  },\n\t  \n\t  end(frm){\n\t      frm.trigger(\"date_validate\")\n\t      \n\t  },\n\t\n\t   date_validate:function(frm){\n\t    if(frm.doc.end < frm.doc.start){\n\t        frappe.msgprint(__(\"End date cannot be less than Start Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\tdate_validation:function(frm){\n\t    if(frm.doc.end < frm.doc.start){\n\t        frappe.msgprint(__(\"Start date cannot be greater than End Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\t reporting_date(frm){\n\t      frm.trigger(\"report_validation\")\n\t      \n\t  },\n\t  \n\t  \n\t re_join(frm){\n\t      frm.trigger(\"rejoin_validation\")\n\t},\n\t\n\t\n\treport_validation:function(frm){\n\t    if(frm.doc.re_join < frm.doc.reporting_date){\n\t        frappe.msgprint(__(\"Reporting date cannot be greater than Re-Join Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\trejoin_validation:function(frm){\n\t    if(frm.doc.re_join < frm.doc.reporting_date){\n\t        frappe.msgprint(__(\"Re-Join date cannot be lesser than Reporting Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\t\n\t\n\t\n\t    total_leave_in_days:function(frm){\n\t     if(frm.doc.start && frm.doc.end){\n\t         var end = frappe.datetime.obj_to_str(frm.doc.end);\n\t         var start = frappe.datetime.obj_to_str(frm.doc.start);\n\t         var datediff = frappe.datetime.get_day_diff(end,start);\n\t         frm.set_value(\"total_leave_in_days\",datediff);\n\t     }\n\t    },\n\t    \n\t    \n\t    \tre_join(frm){\n    \t    frm.trigger(\"late_joining_in_days\")\n    \t},\n\t    \n\t    late_joining_in_days:function(frm){\n\t    if(frm.doc.reporting_date && frm.doc.re_join){      \n\t        var rejoin = frappe.datetime.obj_to_str(frm.doc.re_join);\n\t        var report = frappe.datetime.obj_to_str(frm.doc.reporting_date);\n\t        var difference = frappe.datetime.get_day_diff(rejoin,report);\n\t        frm.set_value(\"late_joining_in_days\",difference);\n\t    }\n\t    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staff Permission Tardy Absent Form",
  "enabled": 1,
  "modified": "2021-10-05 10:19:28.565749",
  "name": "Staff Permission Tardy Absent Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Staff Permission Tardy Absent Form', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n// \tvalidate(frm){\n// \t    frm.trigger(\"date_validation\")\n\n// \t  },\n\t to_date(frm){\n\t      frm.trigger(\"date_validate\")\n\t      frm.trigger(\"datediffer\")\n\t      \n\t  },\n\t  \n\t  from_date(frm){\n\t      frm.trigger(\"date_validation\")\n\t      frm.trigger(\"datediffer\")\n\t      \n\t  },\n\t \n\t   date_validate:function(frm){\n\t    if(frm.doc.to_date < frm.doc.from_date){\n\t        frappe.msgprint(__(\"To date cannot be less than From Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\t\n\tdate_validation:function(frm){\n\t    if(frm.doc.to_date < frm.doc.from_date){\n\t        frappe.msgprint(__(\"From date cannot be greater than To Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\n     datediffer:function(frm){\n\t     if(frm.doc.from_date && frm.doc.to_date){\n\t         var to = frappe.datetime.obj_to_str(frm.doc.to_date);\n\t         var from = frappe.datetime.obj_to_str(frm.doc.from_date);\n\t         var datediff = frappe.datetime.get_day_diff(to,from);\n\t         frm.set_value(\"days\",datediff);\n\t     }\n\t    }\n\t    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vacating Accommodation Declaration",
  "enabled": 1,
  "modified": "2021-10-04 16:15:23.872642",
  "name": "Self Declaration Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Vacating Accommodation Declaration', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tonload(frm){\n\t    frm.trigger(\"get_today_date\");\n\t    \n\t},\n\tget_today_date:function(frm){\n\t    var today = new Date()\n\t\tconsole.log(today)\n\t\tvar dd = today.getDate();\n\t\tvar mm = today.getMonth() + 1; \n\t\tvar yyyy = today.getFullYear();\n\t\tif(dd<10)\n\t\t{\n\t\t    dd='0'+dd;\n\t\t    \n\t\t}\n\t\tif(mm<10)\n\t\t{\n\t\t    mm='0'+mm;\n\t\t    \n\t\t} \n\t\ttoday = dd+'-'+mm+'-'+yyyy;\n\t\tfrm.set_value('dated',today)\n\t    \n\t},\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staff Probation Evaluation Form",
  "enabled": 1,
  "modified": "2021-08-28 10:50:18.681881",
  "name": "Staff Probation Evaluation Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Staff Probation Evaluation Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t child(frm){\n        console.log(frm.doc.child);\n    \n    },\n\ttotal_score(frm){\n        var total = 0\n        $.each(frm.doc.child,function(i,d){\n            if(d.rating){\n            total += d.rating\n            }\n        })\n        console.log(total)\n        frm.set_value('total_score',total)\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visa Approval Monitor",
  "enabled": 1,
  "modified": "2021-08-28 10:33:16.331125",
  "name": "Visa Approval Monitor-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Visa Approval Monitor', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tvisa_application_no(frm){\n\t    console.log(frm.doc.visa_application_no);\n\t},\n\t\tused_visa(frm){\n\t\t    if(frm.doc.allocated_number){\n\t    var balance = frm.doc.allocated_number - parseInt(frm.doc.used_visa)\n\t    frm.set_value(\"balance\",balance);\n\t    if(balance == 0){\n\t        frm.set_value('availability_status','Completed')\n\t    }\n\t    else if(balance > 0){\n\t        frm.set_value('availability_status','Available')\n\t    }\n\t\t    }\n\t},\n\tallocated_number(frm){\n\t\t    if(frm.doc.allocated_number){\n\t    var balance = frm.doc.allocated_number - parseInt(frm.doc.used_visa)\n\t    frm.set_value(\"balance\",balance);\n\t    if(balance == 0){\n\t        frm.set_value('availability_status','Completed')\n\t    }\n\t    else if(balance > 0){\n\t        frm.set_value('availability_status','Available')\n\t    }\n\t\t    }\n\t\t    \n\t},\n\tvisa_status(frm){\n\t    if(frm.doc.visa_status == 'Invalid'){\n\t        frm.set_value('availability_status','Invalid')\n\t    }\n\t},\n\t\n\t\n\t\n\t\n\t\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tvisa_expiry_date(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tfuture_date_validate:function(frm){\n\t\tvar today = new Date()\n\t\tconsole.log(today)\n\t\ttoday.setDate(today.getDate());\n\t\tvar dd = today.getDate();\n        var mm = today.getMonth() + 1; \n        var yyyy = today.getFullYear();\n        if(dd<10) \n            {\n                dd='0'+dd;\n            } \n            \n        if(mm<10)\n            {\n                mm='0'+mm;\n            } \n        today = yyyy+'-'+mm+'-'+dd;\n\t\tconsole.log(frm.doc.visa_expiry_date)\n\t\tif (frm.doc.visa_expiry_date < today){\n\t\t    frappe.msgprint(\"Future Date only allowed for visa expiry date\")\n\t\t    \t    frappe.validated = false;\n\t\t}\n\t}\n\t\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal Form",
  "enabled": 1,
  "modified": "2021-08-28 16:36:26.734610",
  "name": "Appraisal Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Appraisal Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\temp_id(frm){\n        console.log(frm.doc.emp_id);\n    \n    },\n\t validate(frm){\n\t    frm.trigger(\"add_salary\")\n        var total = 0\n        $.each(frm.doc.appraisal_rating,function(i,d){\n            if(d.rating){\n            total += d.rating\n            }\n        })\n        console.log(total)\n        frm.set_value('total_score',total)\n\t },\n\n\t other_allowances(frm){\n\t\t    if(frm.doc.basic_salary){\n\t    var balance = frm.doc.basic_salary - frm.doc.Other_allowances\n\t    console(balance)\n\t    frm.set_value(\"balance\",balance);\n\t\t    }\n\t \n}\n});\n\nfrappe.ui.form.on('Current Salary Table', {\n\tother_allowances(frm,cdt,cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t    if(child.basic_salary && child.other_allowances){\n\t    var total = parseInt(child.basic_salary) + parseInt(child.other_allowances)\n\t    child.total_salary = total\n\t    frappe.model.set_value(cdt,cdn,\"total_salary\",total)\n\t}\n\tfrm.refresh_field('current_salary_table')\n\t}\n})\n\nfrappe.ui.form.on('Revised Salary Table', {\n    other_allowances(frm,cdt,cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t    if(child.basic_salary && child.other_allowances){\n\t    var total = parseInt(child.basic_salary) + parseInt(child.other_allowances)\n\t    child.total_salary = total\n\t    frappe.model.set_value(cdt,cdn,\"total_salary\",total)\n\t  \t}\n\tfrm.refresh_field('revised_salary_table')\n\t},\n\t\n    \n\t\n    \n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staff Disciplinary Action Form",
  "enabled": 1,
  "modified": "2021-08-28 08:32:32.914677",
  "name": "Staff Disciplinary Action Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Staff Disciplinary Action Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tdate_of_incident(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\tdate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\t\n\t\n\tfuture_date_validate:function(frm){\n\t\tvar today = new Date()\n\t\tconsole.log(today)\n\t\ttoday.setDate(today.getDate());\n\t\tvar dd = today.getDate();\n        var mm = today.getMonth() + 1; \n        var yyyy = today.getFullYear();\n        if(dd<10) \n            {\n                dd='0'+dd;\n            } \n            \n        if(mm<10) \n            {\n                mm='0'+mm;\n            } \n        today = yyyy+'-'+mm+'-'+dd;\n\t\tconsole.log(typeof today)\n\t\tconsole.log(frm.doc.date_of_incident)\n\t\tif (frm.doc.date_of_incident > today){\n\t\t    frappe.msgprint(\"Future Date not Allowed in date of incident\")\n\t\t    frappe.validated = false;\n\t\t}\n\t\tif (frm.doc.date > today){\n\t\t    frappe.msgprint(\"Future Date not Allowed in  date of evaluation\")\n\t\t    frappe.validated = false;\n\t\t}\n\n\t},\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Business Card",
  "enabled": 0,
  "modified": "2021-10-05 07:45:19.792077",
  "name": "Business Card Requitision Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Business Card Requitision Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tonload(frm){\n\t    frm.trigger(\"get_today_date\");\n\t    },\n\t    get_today_date:function(frm){\n\t        var today = new Date()\n\t\t\tconsole.log(today)\n\t\t\tvar dd = today.getDate();\n\t\t\tvar mm = today.getMonth() + 1; \n\t\t\tvar yyyy = today.getFullYear();\n\t\t\tif(dd<10)\n\t\t\t{\n\t\t\t    dd='0'+dd;\n\t\t\t} \n\t\t\t\t\t\n\t\t\tif(mm<10)\n\t\t\t{\n\t\t\t    mm='0'+mm;\n\t\t\t    \n\t\t\t} \n\t\t\ttoday = dd+'-'+mm+'-'+yyyy;\n\t\t\tfrm.set_value('date',today)\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\t end(frm){\n\t      frm.trigger(\"date_validate\")\n\t      \n\t  },\n\t\n\t   date_validate:function(frm){\n\t    if(frm.doc.end < frm.doc.start){\n\t        frappe.msgprint(__(\"End date cannot be less than Start Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\t\t\n\t\t\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Accommodation Material",
  "enabled": 1,
  "modified": "2021-10-05 07:49:08.894115",
  "name": "Staff Accommodation Material Request Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Staff Accommodation Material Request Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tonload(frm){\n\t    frm.trigger(\"get_today_date\");\n\t    \n\t},\n\tget_today_date:function(frm){\n\t    var today = new Date()\n\t\tconsole.log(today)\n\t\tvar dd = today.getDate();\n\t\tvar mm = today.getMonth() + 1; \n\t\tvar yyyy = today.getFullYear();\n\t\tif(dd<10)\n\t\t{\n\t\t    dd='0'+dd;\n\t\t} \n\t\t\t\t\t\n\t\tif(mm<10)\n\t\t{\n\t\t    mm='0'+mm;\n\t\t\t    \n\t\t} \n\t\ttoday =dd+'-'+mm+'-'+yyyy;\n\t\tfrm.set_value('date',today)\n\t    \n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Mobile Tariff Change",
  "enabled": 1,
  "modified": "2021-10-05 07:53:17.983015",
  "name": "Company Mobile Tariff Change Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Company Mobile Tariff Change Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\nonload(frm){\n\t    frm.trigger(\"get_today_date\");\n\t    },\n\t    get_today_date:function(frm){\n\t        var today = new Date()\n\t\t\tconsole.log(today)\n\t\t\tvar dd = today.getDate();\n\t\t\tvar mm = today.getMonth() + 1; \n\t\t\tvar yyyy = today.getFullYear();\n\t\t\tif(dd<10)\n\t\t\t{\n\t\t\t    dd='0'+dd;\n\t\t\t} \n\t\t\t\t\t\n\t\t\tif(mm<10)\n\t\t\t{\n\t\t\t    mm='0'+mm;\n\t\t\t    \n\t\t\t} \n\t\t\ttoday = dd+'-'+mm+'-'+yyyy;\n\t\t\tfrm.set_value('date',today)\n\t\t\t\t\n\t\t\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "HR Request",
  "enabled": 1,
  "modified": "2021-10-06 13:27:56.481152",
  "name": "HR Request Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('HR Request', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tonload(frm){\n\t    if(!frm.doc.table_34){\n\t    frappe.call({\n\t        method:'frappe.client.get_list',\n\t        args:{\n\t            'doctype':'Request Type'\n\t        },\n\t        callback(r){\n\t            $.each(r.message,function(i,v){\n\t                frm.add_child('table_34',{\n\t                    'request_type':v.name\n\t                })\n\t                frm.refresh_field('table_34')\n\t            })\n\t        }\n\t    })\n\t}\n\t}\n\t\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2022-01-05 15:20:31.136544",
  "name": "Leave Application-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Leave Application', {\n    refresh(frm){\n        frm.trigger('get_leave_details')\n        \n        frm.add_custom_button(__(\"Exit Checklist\"), function () {\n            frappe.route_options = {\n\t\t\t\t\t\"employee\": frm.doc.employee,\n\t\t\t\t};\n            frappe.set_route('Form','Exit Checklist','new-exit-check-list-1');\n    },\n    );\n    },\n    \n   \n    \n    \n    validate(frm){\n        \n        // frm.trigger('get_leave_details')\n        frm.trigger('role_permission')\n    },\n    \n    from(frm){\n    frm.trigger('from_date_validation')\n    },\n    \n    to(frm){\n    frm.trigger('to_date_validation')\n    },\n    \n\tget_leave_details(frm) {\n\t   if(!frm.doc.__islocal){\n\t    frappe.call({\n\t        method :\"electra.custom.get_leave_details\",\n\t        args:{\n\t            name : frm.doc.name,\n\t            from_date : frm.doc.from_date,\n\t            to_date : frm.doc.to_date,\n\t            leave : frm.doc.total_leave_days\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        frm.fields_dict.leave_details1.$wrapper.empty().append(\"<h5><b>Leave Details</b><h5><table class='table table-bordered'>\"+r.message+\"</table>\")      \n\t        }\n\t    })\n}\n\t},\n\t\n\t\tfrom_date_validation:function(frm){\n\t    if(frm.doc.to < frm.doc.from){\n\t        frappe.msgprint(__(\"FROM date cannot be greater than TO Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\t\n\t\tto_date_validation:function(frm){\n\t    if(frm.doc.to < frm.doc.from){\n\t        frappe.msgprint(__(\"TO date cannot be lesser than FROM Date\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t\t},\n\t\t\n\t\trole_permission:function(frm){\n\t\t    console.log(frappe.user.has_role('HOD'))\n\t\t    if(frappe.user.has_role(\"HOD\")){\n\t\t        frm.set_value(\"hod\",true)\n\t\t        \n\t\t    }\n\t\t    if(!frappe.user.has_role(\"HOD\")){\n\t\t        frm.set_value(\"hod\",false)\n\t\t    }\n\t\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Grievance",
  "enabled": 1,
  "modified": "2021-10-05 07:49:52.136913",
  "name": "Employee Grievance Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Employee Grievance Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\t\n\t\n\tdate_and(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\t\n\t\tfuture_date_validate:function(frm){\n\t    if(frm.doc.\tdate_and > frappe.datetime.now_date()){\n\t        frappe.msgprint(__(\"Future date is not allowed.\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\tonload(frm){\n\t    frm.trigger(\"get_today_date\");\n\t    },\n\t    get_today_date:function(frm){\n\t        var today = new Date()\n\t\t\tconsole.log(today)\n\t\t\tvar dd = today.getDate();\n\t\t\tvar mm = today.getMonth() + 1; \n\t\t\tvar yyyy = today.getFullYear();\n\t\t\tif(dd<10)\n\t\t\t{\n\t\t\t    dd='0'+dd;\n\t\t\t} \n\t\t\t\t\t\n\t\t\tif(mm<10)\n\t\t\t{\n\t\t\t    mm='0'+mm;\n\t\t\t    \n\t\t\t} \n\t\t\ttoday = dd+'-'+mm+'-'+yyyy;\n\t\t\tfrm.set_value('date',today)\n\t\t\t\t\n\t\t\t},\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Accident Declaration Form",
  "enabled": 1,
  "modified": "2021-09-11 15:14:35.928916",
  "name": "Accident Declaration Form-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Accident Declaration Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\t\n\t\tvalidate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\t\n\t\tdate(frm){\n\t    frm.trigger(\"future_date_validate\")\n\t},\n\t\n\n\t\tfuture_date_validate:function(frm){\n\t    if(frm.doc.\tdate > frappe.datetime.now_date()){\n\t        frappe.msgprint(__(\"Future date is not allowed.\"));\n\t\t\tfrappe.validated = false;\n\t    }\n\t},\n\t\n\t   \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Offer",
  "enabled": 1,
  "modified": "2021-09-11 08:58:35.285134",
  "name": "Job Offer-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Offer', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\t\tallowance(frm){\n\t\t    if(frm.doc.basic_salary_qar && frm.doc.allowance){\n\t\t        var gross = frm.doc.basic_salary_qar + parseInt(frm.doc.allowance)\n\t\t        frm.set_value(\"gross_salary_\",gross);\n\t\t    }\n\t\t},\n\t\t\n\t\tbasic_salary_qar(frm){\n\t\t    if(frm.doc.basic_salary_qar && frm.doc.allowance){\n\t\t        var gross = frm.doc.basic_salary_qar + parseInt(frm.doc.allowance)\n\t\t        frm.set_value(\"gross_salary_\",gross);\n\t\t    }\n\t\t}\n\t\n// \tallowance(frm){\n// \t    if(frm.doc.allowance && basic_salary_qar){\n// \t        var gross = frm.doc.basic_salary_qar + frm.doc.allowance\n// \t        frm.set_value(\"gross_salary_\",gross);\n// \t    }\n// \t},\n\t\n\t\t\n// \tbasic_salary_qar(frm){\n// \t    if(frm.doc.allowance && basic_salary_qar){\n// \t        var gross = frm.doc.basic_salary_qar + frm.doc.allowance\n// \t        frm.set_value(\"gross_salary_\",gross);\n// \t    }\n// \t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2021-11-16 14:41:40.424207",
  "name": "Lead-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Lead', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\tvalidate(frm){\n\t    $.each(frm.doc.lead_contact1,function(i,d){\n\t        var company= d.company\n\t        var c = 0\n\t        $.each(frm.doc.lead_contact1,function(i,v){\n\t            \n\t            if(company == v.company){\n\t                if (c != 1){\n\t                c = 1\n\t                \n\t            }\n\t            else{\n\t                frappe.throw('Company '+ company + ' entered multipe times')\n\t            }\n\t            }\n\t         \n\t        })\n\t    })\n\t},\n\torganization_name(frm){\n\t\tif(frm.doc.organization_name){\n\t\t\tfrm.set_value('company_name',frm.doc.organization_name)\n\t\t}\n\t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2022-01-04 09:47:52.078863",
  "name": "Customer-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tcustomer_name(frm){\n\t    console.log(frm.doc.customer_name)\n\t},\n\t\n\tvalidate(frm){\n\t    $.each(frm.doc.customer_table,function(i,d){\n\t        var company= d.company\n\t        var s = 0\n\t        $.each(frm.doc.customer_table,function(i,v){\n\t            \n\t            if(company == v.company){\n\t                if (s != 1){\n\t                s = 1\n\t                \n\t            }\n\t            else{\n\t                console.log(\"ujsu\")\n\t                frappe.throw('Company '+ company + ' entered multiple times')\n\t            }\n\t            }\n\t         \n\t        })\n\t    })\n\t}\n})\n\n\n\t",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staffing Plan",
  "enabled": 1,
  "modified": "2021-09-21 10:00:03.954558",
  "name": "Staffing Plan-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Staffing Plan', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\n\n\nfrappe.ui.form.on('Manpower Plan', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tdesignation(frm,cdt,cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tconsole.log(child.designation)\n\t    if(child.designation){\n\t    frappe.db.count('Employee')\n    .then(count => {\n        console.log(count)\n        child.available_manpower = count\n        frm.refresh_field('manpower_')\n    })\n\t}\n\tfrm.refresh_field('manpower_')\n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Manpower plan Tool",
  "enabled": 0,
  "modified": "2021-11-01 10:10:40.679446",
  "name": "Manpower plan Tool-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Manpower plan Tool', {\n\trefresh(frm) {\n\t\tfrm.disable_save();\n\t},\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Opening",
  "enabled": 1,
  "modified": "2021-10-09 16:04:56.952810",
  "name": "Job Opening-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Opening', {\n\trefresh(frm) {\n\t\thide_field(\"job_title\")\n\t},\n\t\n\tvalidate(frm){\n\t    frm.trigger(\"designation\")\n\t},\n\t\n\tdesignation:function(frm){\n\t    if(frm.doc.designation){\n\t        var s=frm.doc.designation\n\t          frm.set_value(\"job_title\",s)\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2022-01-02 05:32:15.660302",
  "name": "Material Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Material Request', {\n\trefresh(frm) {\n\t\tif(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n\t\tfetch(frm){\n\t    frappe.call({\n\t        method: 'electra.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'electra.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'electra.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n})\n\nfrappe.ui.form.on('Material Request Item', {\n\titem_code(frm,cdt,cdn) {\n\t  frm.trigger('fetch')\n\t},\n\t\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2022-01-03 12:07:29.363628",
  "name": "Purchase Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Order', {\n    validate(frm){\n\t    frappe.call({\n\t        method :\"electra.utils.get_evaluation_date\",\n\t        args: {\n\t            \"supplier\":frm.doc.supplier\n    \t\t\t\t },\n\t        callback(r){\n\t            if(r.message){\n\t                if(r.message < frm.doc.transaction_date){\n\t                    frappe.msgprint(__(\"Re-evaluation is required for this supplier\"));\n\t                }\n\t                }\n\t            }\n\t    })\n\t},\n\trefresh(frm) {\n\t    if(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t     if(frm.doc.docstatus == 1){\n\t    frm.add_custom_button(__(\"Print PO\"), function () {\n                if(frm.doc.parent_company){\n                    var letter_head = frm.doc.parent_company\n                }\n                else{\n                    var letter_head = frm.doc.company\n                } \n                var f_name = frm.doc.name\n                console.log(letter_head)\n                var print_format =\"Purchase Order\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Purchase Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                    + \"&letterhead=\" + encodeURIComponent(letter_head) \n                   ));\n            \n\n            });\n// \t\tfrm.add_custom_button(__('Logistics Request'), function(){\n\t\n// \t    var lg = frappe.model.make_new_doc_and_get_name('Logistics Request');\n//         lg = locals['Logistics Request'][lg];\n//         lg.order_no = frm.doc.name\n//         lg.logistic_type = \"Import\"\n//         lg.po_so = \"Purchase Order\"\n//         frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n\t\t    \n// \t    })\n\t     }\n\t},\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'electra.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'electra.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'electra.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t}\n});\nfrappe.ui.form.on('Purchase Order Item', {\n\titem_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2022-01-09 17:10:58.895040",
  "name": "Opportunity-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Opportunity', {\n    setup(frm){\n        frm.set_query('converted_by', function(doc) {\n\t\t\treturn {\n\t\t\t\tquery: \"electra.utils.get_company_users\",\n\t\t\t\tfilters: {\n\t\t\t\t\t'company': frm.doc.company\n\t\t\t\t}\n\t\t\t};\n\t\t});\n    },\n    onload(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    party_name(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    opportunity_from(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    get_credit_limit(frm){\n        $(frm.fields_dict.credit_limit.wrapper).empty();\n        if(frm.doc.opportunity_from == 'Customer' && frm.doc.party_name){\n             \n            frappe.call({\n\t        method: 'electra.utils.fetch_credit_limit',\n\t        args:{\n\t            \"company\" : frm.doc.company,\n\t            \"customer\" : frm.doc.party_name\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t            $(frm.fields_dict.credit_limit.wrapper).append(d.message);\n\n\t           }\n\t       }\n\t    })\n        }\n    },\n    refresh(frm){\n\t\tif(frm.doc.__islocal){\n\t\t   frm.set_value('converted_by',frappe.session.user)\n\t\t   frm.set_value('prepared_by',frappe.session.user)\n\t\t   frm.set_value('contact_by',frappe.session.user)\n\t\t    \n\t\t}\n\t\telse{\n\t\t    frm.add_custom_button(__('Cost Estimation'),\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tfrappe.model.open_mapped_doc({\n\t\t\tmethod: \"electra.custom.make_cost_estimation\",\n\t\t\tfrm: cur_frm\n\t\t})\n\t\t\t\t\t}, __('Create'));\n\t\t}\n\t\t\n    },\n\tvalidate(frm) {\n\t\t// your code here\n\t\t\n\t},\n\tfetch(frm){\n\t    console.log(frm.doc.items)\n\t    frappe.call({\n\t        method: 'electra.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t     frappe.call({\n\t        method: 'electra.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_po')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_po',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_po')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'electra.custom.get_under_so',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('pending_sales_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('pending_sales_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3]\n\t                    })\n\t                    frm.refresh_field('pending_sales_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n\t\n})\n\nfrappe.ui.form.on('Opportunity Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n// \t  frappe.call({\n// \t        method: 'electra.custom.stock_popup',\n// \t        args:{\n// \t            'item':child.item_code\n// \t        },\n// \t        callback(d){\n// \t           if (d.message){\n// \t               frappe.msgprint(d.message)\n// \t           }\n// \t       }\n// \t    })\n\t   //  frappe.call({\n\t   //     method: 'electra.custom.po_popup',\n\t   //     args:{\n\t   //         'item':child.item_code\n\t   //     },\n\t   //     callback(d){\n\t   //        if (d.message){\n\t   //            frappe.msgprint(d.message)\n\t   //        }\n\t   //    }\n\t   // })\n\t    \n\t   // frappe.call({\n\t   //     method: 'electra.custom.out_qty_popup',\n\t   //     args:{\n\t   //         'item':child.item_code\n\t   //     },\n\t   //     callback(d){\n\t   //        if (d.message){\n\t   //            frappe.msgprint(d.message)\n\t   //        }\n\t   //    }\n\t   // })\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Follow UP",
  "enabled": 1,
  "modified": "2021-11-16 14:51:03.996496",
  "name": "Sales Followup-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Follow UP', {\n\trefresh(frm){\n\t\thide_field(['status']);\n\t\tif(frm.doc.follow_up_for==\"Lead\"){\n\t\t    frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Lead',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    if(r.message.status == 'Converted'){\n\t\t\t\t\t        $(frm.fields_dict.customer_info.wrapper).append(\"<div class='fa fa-info'> <b>Customer has been already created against this Lead, You can either follow against this document or create a new followup with customer under 'Follow up for' Menu.<b></div>\");\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t    unhide_field(['status']);\n\t\t}\n\t\t\n\t\tif(frm.doc.__islocal){\n\t\t    frm.set_value('next_contact_by',frappe.session.user)\n\t\t    frm.set_value('account_manager',frappe.session.user)\n\t\t}\n\t\t\n\t},\n\tonload(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t    frm.set_query('lead_customer', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"status\": [\"!=\",'Converted']\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t    }\n\t},\n\tlead_customer(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t          frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Lead',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.set_value(\"status\",r.message.status)\n\t\t\t\t\t    frm.set_value(\"organization_name\",r.message.company_name)\n\t\t\t\t\t    frm.set_value(\"person_name\",r.message.lead_name)\n\t\t\t\t\t    frm.set_value(\"email_address\",r.message.email_id)\n\t\t\t\t\t    frm.set_value(\"industry\",r.message.industry)\n\t\t\t\t\t    frm.set_value(\"territory\",r.message.territory)\n\t\t\t\t\t    frm.set_value(\"market_segment\",r.message.market_segment)\n\t\t\t\t\t    frm.set_value(\"account_manager\",r.message.lead_owner)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tunhide_field(['status']);\n\t    }\n\t    if(frm.doc.follow_up_for==\"Customer\"){\n\t          frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Customer',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.set_value(\"organization_name\",r.message.customer_name)\n\t\t\t\t\t    frm.set_value(\"email_address\",r.message.email_id)\n\t\t\t\t\t    frm.set_value(\"industry\",r.message.industry)\n\t\t\t\t\t    frm.set_value(\"territory\",r.message.territory)\n\t\t\t\t\t    frm.set_value(\"market_segment\",r.message.market_segment)\n\t\t\t\t\t    frm.set_value(\"account_manager\",r.message.account_manager)\n\t\t\t\t\t    frm.set_value(\"billing_currency\",r.message.default_currency)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t    }\n\t},\n\t\n\tfollow_up_for(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t          frm.set_df_property('lead_customer', \"label\", frm.doc.follow_up_for )\n\t    }\n\t    \n\t    if(frm.doc.follow_up_for==\"Customer\"){\n\t          hide_field(['status']);\n\t          frm.set_df_property('lead_customer', \"label\", frm.doc.follow_up_for )\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2022-01-19 16:10:13.840726",
  "name": "Quotation-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', {\n    refresh(frm){\n        window.onclick = function(event) {\n                $('.popover').popover('dispose');\n                 $('.popover').remove;\n            }\n        if(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t    $(\"[data-fieldname='item_name']\").on('click', (e) => {\n\t         $('.popover').remove();\n\t        const item_name = $(e.currentTarget).text();\n\t    console.log(item_name)\n\t        frappe.call({\n\t        method: 'electra.custom.stock_popup',\n\t        args:{\n\t            'item_name':item_name\n\t        },\n\t        callback(d){\n\t           if (d.message){ \n\t               console.log(d.message)\n\t              \t\t\t\n\t                 $(\"[data-fieldname='item_name']\").popover({\n\t                     html:true,\n\t                     sanitize : false,\n\t                     container: 'body',\n                         content: d.message\n                    });\n        \t           }\n        \t       }\n        \t    })\n\t\t\t});\n\t\t},\n\t\t\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n\tcreate_contact(frm){\n\t    let d = new frappe.ui.Dialog({\n    title: 'Enter details',\n    fields: [\n        {\n            label: 'Name',\n            fieldname: 'name',\n            fieldtype: 'Data'\n        },\n        {\n            label: 'Email ID',\n            fieldname: 'email_id',\n            fieldtype: 'Data'\n        },\n        {\n            label: 'Contact Number',\n            fieldname: 'contact_number',\n            fieldtype: 'Int'\n        },\n        // {\n        //     label: 'Quotation To',\n        //     fieldname: 'quotation_to',\n        //     fieldtype: 'Link',\n        //     options:'Doctype',\n        //     default:'Customer'\n        // },\n        // {\n        //     label: 'Link Name',\n        //     fieldname: 'link_name',\n        //     fieldtype: 'Dynamic Link',\n        //     options:'link_doctype'\n        // }\n    ],\n    primary_action_label: 'Submit',\n    primary_action(values) {\n        frappe.call({\n            method:'electra.custom.create_contact',\n            args:{\n                'name': values.name,\n                'email': values.email_id,\n                'contact_no' :values.contact_number,\n                'customer_name':frm.doc.party_name\n                \n            },\n            \n        callback(r){\n            \n        }\n            \n        })\n        d.hide();\n    }\n});\n\nd.show();\n\t    \n\t},\n    \n    setup(frm){\n        if(frm.doc.__islocal){\n            \n        if(frm.doc.opportunity){\n            frappe.call({\n                method: \"frappe.client.get\",\n                args:{\n                    doctype: \"Opportunity\",\n                    filters: {\n\t\t\t\t\t\t\"name\": frm.doc.opportunity\n\t\t\t\t\t},\n\t\t\t\t\tfields: ['converted_by']\n                },\n                callback:function(r){\n                     frappe.call({\n                        method: \"frappe.client.get\",\n                        args:{\n                            doctype: \"Employee\",\n                            filters: {\n        \t\t\t\t\t\t\"user_id\": r.message.converted_by\n        \t\t\t\t\t},\n        \t\t\t\t\tfields: ['employee']\n                        },\n                        callback:function(r){\n                            if(r.message){\n                            frm.set_value(\"quotation_by\",r.message.employee)\n                            }\n                            }\n                        })\n                }\n            })\n        }\n        else{\n            frm.set_value(\"quotation_by\",frappe.session.user)\n        }\n        }\n        frm.trigger(\"get_credit_limit\")\n    },\n    party_name(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    quotation_to(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    get_credit_limit(frm){\n        $(frm.fields_dict.credit_limit.wrapper).empty();\n        if(frm.doc.quotation_to == 'Customer' && frm.doc.party_name){\n             \n            frappe.call({\n\t        method: 'electra.utils.fetch_credit_limit',\n\t        args:{\n\t            \"company\" : frm.doc.company,\n\t            \"customer\" : frm.doc.party_name\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t            $(frm.fields_dict.credit_limit.wrapper).append(d.message);\n\n\t           }\n\t       }\n\t    })\n        }\n    },\n    onload(frm){\n        \n\t    if(frm.doc.__islocal){\n\t    if(frm.doc.cost_estimation){\n\t    frappe.call({\n\t\t\tmethod: \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Cost Estimation\",\n\t\t\t\tfilters: {\n\t\t\t\t\t\"name\": frm.doc.cost_estimation\n\t\t\t\t},\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t    frm.clear_table(\"quotation_scope_of_work\")\n\t\t\t\t    $.each(r.message.scope_of_work,function(i,d){\n\t\t\t\t        frm.add_child(\"quotation_scope_of_work\", {\n\t\t\t\t\t\t'scope_of_work': d.scope_of_work,\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'description': d.description,\n\t\t\t\t\t\t'rate': d.basic_rate,\n\t\t\t\t\t\t'amount':d.amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_scope_of_work')\n\t\t\t\t    })\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\t\n\t    frappe.call({\n\t\t\tmethod: \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Cost Estimation\",\n\t\t\t\tfilters: {\n\t\t\t\t\t\"name\": frm.doc.cost_estimation\n\t\t\t\t},\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t    if(frm.doc.__islocal){\n\t\t\t        frm.clear_table(\"items\")\n\t\t\t        frm.clear_table(\"quotation_work_title_item\")\n\t\t\t\tif (r.message) {\n\t\t\t\t    var qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.design_calculation,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'DESIGN',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description':  desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'DESIGN',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t    \n\t\t\t\t    \n\t\t\t\t    var qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.materials,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'MATERIALS',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description': desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'MATERIALS',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t    \n\t\t\t\t    var qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.finishing_work,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'FINISHING WORK',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description': desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'FINISHING WORK',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t    \n\t\t\t\t    var qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.bolts_accessories,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'ACCESSORIES',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description': desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'ACCESSORIES',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t    \n\t\t\t\t    var qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.fabrication_installation,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'INSTALLATION/MANPOWER',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description': desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'INSTALLATION/MANPOWER',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t\t\n\t\t\t\t\tvar qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.heavy_equipments,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'TOOLS/EQUIPMENTS/TRANSPORT',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description': desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'TOOLS/EQUIPMENTS/TRANSPORT',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t    \n\t\t\t\t    var qty = 0\n\t\t\t\t    var amount = 0\n\t\t\t\t    $.each(r.message.manpower_subcontract,function(i,d){\n\t\t\t\t        qty += d.qty\n\t\t\t\t        amount += d.amount\n\t\t\t\t        var desc = ''\n\t\t\t\t        if (d.description){\n\t\t\t\t            desc = d.description\n\t\t\t\t        }\n\t\t\t\t        else{\n\t\t\t\t            desc = d.item\n\t\t\t\t        }\n\t\t\t\t        frm.add_child(\"items\", {\n\t\t\t\t\t\t'item_code': d.item,\n\t\t\t\t\t\t'item_name': d.item,\n\t\t\t\t\t\t'work_title': 'OTHERS',\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'uom': d.unit,\n\t\t\t\t\t\t'description': desc,\n\t\t\t\t\t\t'rate': d.unit_price,\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t    })\n\t\t\t\t    frm.add_child(\"quotation_work_title_item\", {\n\t\t\t\t\t\t'item_name': 'OTHERS',\n\t\t\t\t\t\t'quantity': qty,\n\t\t\t\t\t\t'amount': amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('quotation_work_title_item')\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t});\n\t    }\n    }\n    else{\n        // if(frappe.user.has_role('HOD')){\n        //     frm.add_custom_button(__(\"Show Valuation Rate\"), function () {\n        //         frappe.call({\n        // \t        method: 'electra.utils.show_valuation_rate',\n        // \t        args:{\n        // \t            'items' : frm.doc.items,\n        // \t            'company': frm.doc.company\n        // \t        },\n        // \t        callback(d){\n        // \t           if (d.message){\n        // \t               frappe.msgprint(d.message)\n        // \t           }\n        // \t       }\n        // \t    })\n        //     });\n        // }\n       \n        frm.add_custom_button(__(\"Print Quotation\"), function () {\n                if(frm.doc.parent_company){\n                    var letter_head = frm.doc.parent_company\n                }\n                else{\n                    var letter_head = frm.doc.company\n                } \n                var f_name = frm.doc.name\n                var print_format =\"Quotation\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Quotation\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                    + \"&letterhead=\" + encodeURIComponent(letter_head) \n                   ));\n            \n\n            });\n    }\n    },\n\n\t\n\t\n\t\tfetch(frm){\n\t    frappe.call({\n\t        method: 'electra.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t     frappe.call({\n\t        method: 'electra.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_po')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_po',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_po')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'electra.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n\t\n\t\tadditional_discount_percentage(frm){\n\t    if (frm.doc.additional_discount_percentage){\n\t    frappe.call({\n\t        method: 'electra.custom.check_discount_percent',\n\t        args:{\n\t            'user':frappe.session.user,\n\t            'discount': frm.doc.additional_discount_percentage\n\t        },\n\t        callback(r){\n\t            if(r.message){\n\t            if(r.message != 'invalid'){\n\t                frappe.msgprint(\"Maximum discount percentage allowed for you is \"+String(r.message)+ \"%\")\n\t                frm.set_value('additional_discount_percentage','')\n\t            }\n\t            else{\n\t                frappe.msgprint(\"You are not authorised to give discount\")\n\t                frm.set_value('additional_discount_percentage','')\n\t            }\n\t        }\n\t        }\n\t    })\n\t}\n\t},\n})\nfrappe.ui.form.on('Quotation Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n\t\n\tdiscount_percentage(frm,cdt,cdn){\n        var child = locals[cdt][cdn]\n\t    if (child.discount_percentage){\n\t    frappe.call({\n\t        method: 'electra.custom.check_discount_percent',\n\t        args:{\n\t            'user':frappe.session.user,\n\t            'discount': child.discount_percentage\n\t        },\n\t        callback(r){\n\t            if(r.message){\n\t            if(r.message != 'invalid'){\n\t                frappe.msgprint(\"Maximum discount percentage allowed for you is \"+String(r.message)+ \"%\")\n\t                child.discount_percentage = ''\n\t                frm.refresh_field('items')\n\t            }\n\t            else{\n\t                frappe.msgprint(\"You are not authorised to give discount\")\n\t                child.discount_percentage = ''\n\t                frm.refresh_field('items')\n\t            }\n\t        }\n\t        }\n\t    })\n\t}\n\t},\n\t\n\tdownload(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    var f_name = child.item_code\n        var url = frappe.urllib.get_full_url(\n\t\t\t\t\t'https://erp.nordencommunication.com/api/method/norden.utils.download_pdf?'\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Eyenor Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1&format=Datasheet%202&no_letterhead=0\"\n                    )\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\ttype: 'GET',\n\t\t\tsuccess: function(result) {\n\t\t\t\tif(jQuery.isEmptyObject(result)){\n\t\t\t\t\tfrappe.msgprint(__('No Records for these settings.'));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twindow.location = url;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n        \n\t}\n\t\n\n})\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Landed Cost Voucher",
  "enabled": 1,
  "modified": "2022-01-03 11:26:05.091007",
  "name": "Landed Cost Voucher-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Landed Cost Voucher', {\n    setup: function(frm) {\n\tfrm.set_query(\"po_reference\", \"taxes\", function(doc, cdt, cdn) {\n\t\tlet d = locals[cdt][cdn];\n\t\treturn {\n\t\t\tfilters: [\n\t\t\t\t['Purchase Order', 'supplier', '=', d.supplier]\n\t\t\t]\n\t\t};\n\t});\n\t},\n\trefresh(frm) {\n\tif(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2021-11-11 14:17:44.245932",
  "name": "Supplier-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Day Plan Timesheet",
  "enabled": 1,
  "modified": "2021-11-15 11:20:47.211040",
  "name": "Day Plan Timesheet-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Day Plan Timesheet', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tday_plan(frm){\n\t    frappe.call({\n    \t\tmethod: \"frappe.client.get\",\n    \t\targs: {\n    \t\t\tdoctype: \"Day Plan\",\n    \t\t\tfilters: {\n    \t\t\t\t\"name\": frm.doc.day_plan\n    \t\t\t},\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r.message.employee) {\n    \t\t\t    $.each(r.message.employee,function(i,d){\n    \t\t\t        frm.add_child('time_log',{\n\t                        'employee':d.employee\n\t                    })\n\t                    frm.refresh_field('time_log')\n    \t\t\t    })\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-01-02 11:10:53.483531",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n    setup(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    customer(frm){\n        frm.trigger(\"get_credit_limit\")\n    },\n    get_credit_limit(frm){\n        $(frm.fields_dict.credit_limit.wrapper).empty();\n        if(frm.doc.customer){\n            frappe.call({\n\t        method: 'electra.utils.fetch_credit_limit',\n\t        args:{\n\t            \"company\" : frm.doc.company,\n\t            \"customer\" : frm.doc.customer\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t            $(frm.fields_dict.credit_limit.wrapper).append(d.message);\n\n\t           }\n\t       }\n\t    })\n        }\n    },\n    validate(frm){\n\t\tfrappe.db.get_value('Quotation', frm.doc.quotation,'cost_estimation')\n\t\t\t.then(r => {\n\t\t\t\tif (r.message && Object.entries(r.message).length === 0) {\n\t\t\t\t\tfrm.set_value(\"cost_estimation\",r.message.cost_estimation)\n\t\t\t\t}\n\t\t\t})\n\t},\n\t\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'electra.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t     frappe.call({\n\t        method: 'electra.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_po')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_po',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_po')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'electra.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n\t    \n\trefresh(frm) {\n\t    if(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t    if(frm.doc.docstatus == 1){\n\t\tfrm.add_custom_button(__('Project Budget'),\n\t\t\tfunction() {\n\t\t\t\tfrappe.model.open_mapped_doc({\n\t\t\t\t\tmethod: \"electra.custom.make_project_budget\",\n\t\t\t\t\tfrm: cur_frm\n\t\t\t\t})\n\t\t\t}, __('Create'));\n\t    }\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n\tonload(frm){\n\t    frappe.call({\n\t\t\tmethod: \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Quotation\",\n\t\t\t\tfilters: {\n\t\t\t\t\t\"name\": frm.doc.quotation\n\t\t\t\t},\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t    if(frm.doc.__islocal){\n\t\t\t\t        frm.clear_table(\"so_scope_of_work\")\n\t\t\t\t    $.each(r.message.quotation_scope_of_work,function(i,d){\n\t\t\t\t        frm.add_child(\"so_scope_of_work\", {\n\t\t\t\t\t\t'scope_of_work': d.scope_of_work,\n\t\t\t\t\t\t'qty': d.qty,\n\t\t\t\t\t\t'description': d.description,\n\t\t\t\t\t\t'rate': d.rate,\n\t\t\t\t\t\t'amount':d.amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('so_scope_of_work')\n\t\t\t\t    })\n\t\t\t\t    \n\t\t\t\t    frm.clear_table(\"so_work_title_item\")\n\t\t\t\t    $.each(r.message.quotation_work_title_item,function(i,d){\n\t\t\t\t        frm.add_child(\"so_work_title_item\", {\n\t\t\t\t\t\t'item_name': d.item_name,\n\t\t\t\t\t\t'quantity': d.quantity,\n\t\t\t\t\t\t'amount': d.amount\n\t\t\t\t\t})\n\t\t\t\t\tfrm.refresh_field('so_work_title_item')\n\t\t\t\t    })\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n})\n\nfrappe.ui.form.on('Sales Order Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t  frappe.call({\n\t        method: 'electra.custom.stock_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t     frappe.call({\n\t        method: 'electra.custom.po_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'electra.custom.out_qty_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Master Record",
  "enabled": 1,
  "modified": "2021-12-10 12:34:35.442376",
  "name": "Employee Master Record-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Employee Master Record', {\n\trefresh(frm) {\n\t\tfrm.disable_save();\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2022-01-02 05:21:43.579876",
  "name": "Purchase Receipt-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t    if(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t    if(frappe.user.has_role(\"Store Manager\"))\n\t    {\n\t\tfrm.set_df_property('supplier', 'read_only', 1);\n\t    }\n\t   // var df1 = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"items\");\n\t   // df1.read_only = 1\n\t    \n// \t \tvar df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"item_name\", cur_frm.doc.name);\n// \t \tconsole.log(df.read_only)\n//     df.hidden = 1;\n//         \tconsole.log(df.read_only)\n//         \tfrm.refresh_fields()\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n\tsetup(frm){\n\t    if(frappe.user.has_role(\"Store Manager\")){\n\t    var df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"rate\",frm.doc.name);\n\t    df.hidden = 1\n\t    var df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"amount\",frm.doc.name);\n\t    df.hidden = 1\n\t   // df.in_list_view = 0\n\t    }\n\t}\n})\n\n// frappe.ui.form.on(\"Purchase Receipt Item\", \"items_on_form_rendered\", function(doc,grid_row) {\n// \tconsole.log(doc)\n// })\n// cur_frm.get_field(\"items\").grid.docfields[1].read_only = 1\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2021-12-16 13:16:20.983405",
  "name": "Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tbrand(frm){\n\t    if(frm.doc.brand){\n\t         frm.set_value('quality_inspection_template',frm.doc.brand)\n\t    }\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Exit Checklist",
  "enabled": 1,
  "modified": "2021-12-17 17:36:21.721676",
  "name": "Exit Checklist-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Exit Checklist', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\t onload(frm){\n\t     if(!frappe.user.has_role(\"PRO\")){\n\t     hide_field(['exit_confirmation_section'])\n\t     }\n        \n    },\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM",
  "enabled": 1,
  "modified": "2021-12-22 09:34:56.113140",
  "name": "BOM-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('BOM', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n}),\n\nfrappe.ui.form.on('BOM Item', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\titem_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t  frappe.call({\n\t        method: 'electra.custom.stock_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t        \n\t    }\n\t    \n\t}\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-01-12 14:20:03.921113",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t\tif(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t},\n\t\n\tproject(frm){\n\t    if(frm.doc.project){\n\t    frappe.call({\n    \t\tmethod: \"frappe.client.get_list\",\n    \t\targs: {\n    \t\t\tdoctype: \"Sales Invoice\",\n    \t\t\tfilters: {\n    \t\t\t\t\"project\": frm.doc.project\n    \t\t\t},\n\t\t\t\tfields:['name','outstanding_amount']\n    \t\t},\n\t\t\tcallback(r){\n\t            if(r.message){\n\t\t\t\t\t$.each(r.message,function(i,v){\n\t\t\t\t\t    console.log(v)\n\t\t\t\t\t\tfrm.add_child('previous_sales_invoice',{\n\t                        'invoice_no':v.name,\n\t                        'outstanding':v.outstanding_amount,\n\t                    })\n\t\t\t\t\t\tfrm.refresh_field('previous_sales_invoice')\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t    }\n\t},\n\t\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n\tonload(frm){\n\t    frm.add_custom_button(__(\"Print\"), function () {\n                if(frm.doc.parent_company){\n                    var letter_head = frm.doc.parent_company\n                }\n                else{\n                    var letter_head = frm.doc.company\n                } \n                var f_name = frm.doc.name\n                var print_format =\"Sales Return\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                    + \"&letterhead=\" + encodeURIComponent(letter_head) \n                   ));\n            \n\n            });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2022-01-02 05:10:50.112246",
  "name": "Delivery Note-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Delivery Note', {\n\trefresh(frm) {\n\t    if(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2022-01-02 05:12:20.563219",
  "name": "Purchase Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\t    if(frm.doc.company){\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2022-01-02 07:37:50.286845",
  "name": "Stock Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t\tif(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company){\n\t    frm.trigger(\"set_series\")\n\t    }\n\t},\n\tset_series(frm){\n\t    frappe.call({\n    \t\tmethod: \"electra.utils.get_series\",\n    \t\targs: {\n    \t\t\tcompany: frm.doc.company,\n    \t\t\tdoctype: frm.doc.doctype\n    \t\t},\n    \t\tcallback: function (r) {\n    \t\t\tif (r) {\n    \t\t\t    frm.set_value('naming_series',r.message)\n    \t\t\t}\n    \t\t}\n\t\t\t});\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bulk Attendance Upload",
  "enabled": 0,
  "modified": "2022-01-07 14:15:59.264267",
  "name": "Bulk Attendance Upload-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Bulk Attendance Upload', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\t upload(frm){\n\t     if(frm.doc.upload == false){\n\t         frm.disable_save()\n\t     }\n\t }\n\t\n\t\n\t\n})",
  "view": "Form"
 }
]